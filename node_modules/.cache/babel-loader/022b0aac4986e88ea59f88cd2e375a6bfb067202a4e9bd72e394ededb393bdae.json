{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\David\\\\Downloads\\\\movie-recommendation-system-main\\\\movie-recommendation-system-main\\\\frontend\\\\src\\\\pages\\\\MoodSelectionPage.js\",\n  _s = $RefreshSig$();\nimport React, { useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { AnswerContext } from '../AnswerContext'; // ✅ This path must match your real file location\nimport '../styles/MoodSelectionPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MoodSelectionPage() {\n  _s();\n  const navigate = useNavigate();\n  const {\n    answers,\n    setAnswers\n  } = useContext(AnswerContext);\n  const handleMoodSelect = mood => {\n    const updatedAnswers = {\n      ...answers,\n      Q1: mood === 'comedy' ? 1 : 0\n    };\n    console.log(\"Setting Q1 answer in context:\", updatedAnswers);\n    setAnswers(updatedAnswers);\n    if (mood === 'comedy') {\n      navigate('/musical');\n    } else {\n      navigate('/storytelling'); // if implemented\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"What kind of movie are you in the mood for?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleMoodSelect('comedy'),\n      children: \"Lighthearted and Comedic\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleMoodSelect('drama'),\n      children: \"Serious and Dramatic\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n_s(MoodSelectionPage, \"6CrA3YUDzOFHppavk48X8B834qQ=\", false, function () {\n  return [useNavigate];\n});\n_c = MoodSelectionPage;\nexport default MoodSelectionPage;\nvar _c;\n$RefreshReg$(_c, \"MoodSelectionPage\");","map":{"version":3,"names":["React","useContext","useNavigate","AnswerContext","jsxDEV","_jsxDEV","MoodSelectionPage","_s","navigate","answers","setAnswers","handleMoodSelect","mood","updatedAnswers","Q1","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/David/Downloads/movie-recommendation-system-main/movie-recommendation-system-main/frontend/src/pages/MoodSelectionPage.js"],"sourcesContent":["import React, { useContext } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { AnswerContext } from '../AnswerContext'; // ✅ This path must match your real file location\r\nimport '../styles/MoodSelectionPage.css';\r\n\r\nfunction MoodSelectionPage() {\r\n    const navigate = useNavigate();\r\n    const { answers, setAnswers } = useContext(AnswerContext);\r\n\r\n    const handleMoodSelect = (mood) => {\r\n        const updatedAnswers = {\r\n            ...answers,\r\n            Q1: mood === 'comedy' ? 1 : 0\r\n        };\r\n\r\n        console.log(\"Setting Q1 answer in context:\", updatedAnswers);\r\n        setAnswers(updatedAnswers);\r\n\r\n        if (mood === 'comedy') {\r\n            navigate('/musical');\r\n        } else {\r\n            navigate('/storytelling'); // if implemented\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>What kind of movie are you in the mood for?</h1>\r\n            <button onClick={() => handleMoodSelect('comedy')}>Lighthearted and Comedic</button>\r\n            <button onClick={() => handleMoodSelect('drama')}>Serious and Dramatic</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MoodSelectionPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,aAAa,QAAQ,kBAAkB,CAAC,CAAC;AAClD,OAAO,iCAAiC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,SAASC,iBAAiBA,CAAA,EAAG;EAAAC,EAAA;EACzB,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEO,OAAO;IAAEC;EAAW,CAAC,GAAGT,UAAU,CAACE,aAAa,CAAC;EAEzD,MAAMQ,gBAAgB,GAAIC,IAAI,IAAK;IAC/B,MAAMC,cAAc,GAAG;MACnB,GAAGJ,OAAO;MACVK,EAAE,EAAEF,IAAI,KAAK,QAAQ,GAAG,CAAC,GAAG;IAChC,CAAC;IAEDG,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAEH,cAAc,CAAC;IAC5DH,UAAU,CAACG,cAAc,CAAC;IAE1B,IAAID,IAAI,KAAK,QAAQ,EAAE;MACnBJ,QAAQ,CAAC,UAAU,CAAC;IACxB,CAAC,MAAM;MACHA,QAAQ,CAAC,eAAe,CAAC,CAAC,CAAC;IAC/B;EACJ,CAAC;EAED,oBACIH,OAAA;IAAAY,QAAA,gBACIZ,OAAA;MAAAY,QAAA,EAAI;IAA2C;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpDhB,OAAA;MAAQiB,OAAO,EAAEA,CAAA,KAAMX,gBAAgB,CAAC,QAAQ,CAAE;MAAAM,QAAA,EAAC;IAAwB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACpFhB,OAAA;MAAQiB,OAAO,EAAEA,CAAA,KAAMX,gBAAgB,CAAC,OAAO,CAAE;MAAAM,QAAA,EAAC;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9E,CAAC;AAEd;AAACd,EAAA,CA3BQD,iBAAiB;EAAA,QACLJ,WAAW;AAAA;AAAAqB,EAAA,GADvBjB,iBAAiB;AA6B1B,eAAeA,iBAAiB;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\David\\\\Downloads\\\\movie-recommendation-system-main\\\\movie-recommendation-system-main\\\\frontend\\\\src\\\\pages\\\\SeriousFlow\\\\RealismQuestions.js\",\n  _s = $RefreshSig$();\nimport React, { useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { AnswerContext } from '../../AnswerContext';\nimport '../../styles/RealismQuestions.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RealismQuestions = () => {\n  _s();\n  const {\n    answers,\n    setAnswers\n  } = useContext(AnswerContext);\n  const navigate = useNavigate();\n  const handleAnswer = async value => {\n    const updatedAnswers = {\n      ...answers,\n      Q6: value\n    };\n    setAnswers(updatedAnswers);\n    if (value === 1) {\n      // Realistic → Try to recommend Action movie\n      try {\n        const response = await fetch('http://localhost:5000/api/recommend', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            answers: updatedAnswers,\n            filters: {}\n          })\n        });\n        const data = await response.json();\n        if (data.movie) {\n          navigate('/recommend/action', {\n            state: {\n              movie: data.movie\n            }\n          });\n        } else {\n          alert(data.message || 'No recommendation available.');\n        }\n      } catch (err) {\n        console.error(err);\n        alert('Error fetching recommendation.');\n      }\n    } else {\n      // Fantastical → Go to Scary question\n      navigate('/scary');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"question-container\",\n    children: [\"style=\", {\n      marginTop: '59vh'\n    }, /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Do you want the storyline to be more realistic and plausible or more fantastical and reliant on suspension of disbelief?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleAnswer(1),\n      children: \"Realistic and Plausible\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleAnswer(0),\n      children: \"Fantastical and Reliant on Suspension\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n_s(RealismQuestions, \"BomFtazYtoPWKmNi6ekDpqzJtpA=\", false, function () {\n  return [useNavigate];\n});\n_c = RealismQuestions;\nexport default RealismQuestions;\nvar _c;\n$RefreshReg$(_c, \"RealismQuestions\");","map":{"version":3,"names":["React","useContext","useNavigate","AnswerContext","jsxDEV","_jsxDEV","RealismQuestions","_s","answers","setAnswers","navigate","handleAnswer","value","updatedAnswers","Q6","response","fetch","method","headers","body","JSON","stringify","filters","data","json","movie","state","alert","message","err","console","error","className","children","marginTop","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/David/Downloads/movie-recommendation-system-main/movie-recommendation-system-main/frontend/src/pages/SeriousFlow/RealismQuestions.js"],"sourcesContent":["import React, { useContext } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { AnswerContext } from '../../AnswerContext';\r\nimport '../../styles/RealismQuestions.css';\r\n\r\nconst RealismQuestions = () => {\r\n    const { answers, setAnswers } = useContext(AnswerContext);\r\n    const navigate = useNavigate();\r\n\r\n    const handleAnswer = async (value) => {\r\n        const updatedAnswers = { ...answers, Q6: value };\r\n        setAnswers(updatedAnswers);\r\n\r\n        if (value === 1) {\r\n            // Realistic → Try to recommend Action movie\r\n            try {\r\n                const response = await fetch('http://localhost:5000/api/recommend', {\r\n                    method: 'POST',\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    body: JSON.stringify({ answers: updatedAnswers, filters: {} })\r\n                });\r\n\r\n                const data = await response.json();\r\n\r\n                if (data.movie) {\r\n                    navigate('/recommend/action', { state: { movie: data.movie } });\r\n                } else {\r\n                    alert(data.message || 'No recommendation available.');\r\n                }\r\n            } catch (err) {\r\n                console.error(err);\r\n                alert('Error fetching recommendation.');\r\n            }\r\n        } else {\r\n            // Fantastical → Go to Scary question\r\n            navigate('/scary');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"question-container\">\r\n            style={{ marginTop: '59vh' }}\r\n            <h1>Do you want the storyline to be more realistic and plausible or more fantastical and reliant on suspension of disbelief?</h1>\r\n            <button onClick={() => handleAnswer(1)}>Realistic and Plausible</button>\r\n            <button onClick={() => handleAnswer(0)}>Fantastical and Reliant on Suspension</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RealismQuestions;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,aAAa,QAAQ,qBAAqB;AACnD,OAAO,mCAAmC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM;IAAEC,OAAO;IAAEC;EAAW,CAAC,GAAGR,UAAU,CAACE,aAAa,CAAC;EACzD,MAAMO,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAE9B,MAAMS,YAAY,GAAG,MAAOC,KAAK,IAAK;IAClC,MAAMC,cAAc,GAAG;MAAE,GAAGL,OAAO;MAAEM,EAAE,EAAEF;IAAM,CAAC;IAChDH,UAAU,CAACI,cAAc,CAAC;IAE1B,IAAID,KAAK,KAAK,CAAC,EAAE;MACb;MACA,IAAI;QACA,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAC,qCAAqC,EAAE;UAChEC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YAAE,cAAc,EAAE;UAAmB,CAAC;UAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YAAEb,OAAO,EAAEK,cAAc;YAAES,OAAO,EAAE,CAAC;UAAE,CAAC;QACjE,CAAC,CAAC;QAEF,MAAMC,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;QAElC,IAAID,IAAI,CAACE,KAAK,EAAE;UACZf,QAAQ,CAAC,mBAAmB,EAAE;YAAEgB,KAAK,EAAE;cAAED,KAAK,EAAEF,IAAI,CAACE;YAAM;UAAE,CAAC,CAAC;QACnE,CAAC,MAAM;UACHE,KAAK,CAACJ,IAAI,CAACK,OAAO,IAAI,8BAA8B,CAAC;QACzD;MACJ,CAAC,CAAC,OAAOC,GAAG,EAAE;QACVC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;QAClBF,KAAK,CAAC,gCAAgC,CAAC;MAC3C;IACJ,CAAC,MAAM;MACH;MACAjB,QAAQ,CAAC,QAAQ,CAAC;IACtB;EACJ,CAAC;EAED,oBACIL,OAAA;IAAK2B,SAAS,EAAC,oBAAoB;IAAAC,QAAA,GAAC,QAC1B,EAAC;MAAEC,SAAS,EAAE;IAAO,CAAC,eAC5B7B,OAAA;MAAA4B,QAAA,EAAI;IAAwH;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjIjC,OAAA;MAAQkC,OAAO,EAAEA,CAAA,KAAM5B,YAAY,CAAC,CAAC,CAAE;MAAAsB,QAAA,EAAC;IAAuB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACxEjC,OAAA;MAAQkC,OAAO,EAAEA,CAAA,KAAM5B,YAAY,CAAC,CAAC,CAAE;MAAAsB,QAAA,EAAC;IAAqC;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrF,CAAC;AAEd,CAAC;AAAC/B,EAAA,CA1CID,gBAAgB;EAAA,QAEDJ,WAAW;AAAA;AAAAsC,EAAA,GAF1BlC,gBAAgB;AA4CtB,eAAeA,gBAAgB;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
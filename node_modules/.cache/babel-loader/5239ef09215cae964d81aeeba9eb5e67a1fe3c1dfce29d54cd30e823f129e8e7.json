{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\David\\\\Downloads\\\\movie-recommendation-system-main\\\\movie-recommendation-system-main\\\\frontend\\\\src\\\\pages\\\\LightheartedFlow\\\\RomanceQuestions.js\",\n  _s = $RefreshSig$();\nimport React, { useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { AnswerContext } from '../../AnswerContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RomanceQuestions = () => {\n  _s();\n  const {\n    answers,\n    setAnswers\n  } = useContext(AnswerContext);\n  const navigate = useNavigate();\n  const handleAnswer = async value => {\n    const updatedAnswers = {\n      ...answers,\n      Q4: value\n    };\n    setAnswers(prev => ({\n      ...prev,\n      Q4: value\n    }));\n    if (value === 1) {\n      // User wants romance → go to next romance-specific question (e.g., Q10)\n      navigate('/comedy'); // Or a new page if you'd like\n    } else {\n      // Q4 = 0, skip ahead to recommend Comedy\n      try {\n        const response = await fetch('http://localhost:5000/api/recommend', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            answers: updatedAnswers,\n            filters: {}\n          })\n        });\n        const data = await response.json();\n        if (data.movie) {\n          navigate('/recommend/comedy', {\n            state: {\n              movie: data.movie\n            }\n          });\n        } else {\n          alert(data.message || 'No recommendation available.');\n        }\n      } catch (err) {\n        console.error(err);\n        alert('Error fetching recommendation.');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Are you interested in a movie that focuses on the development of a romantic relationship between two characters?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.buttonContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleAnswer(1),\n        style: styles.button,\n        children: \"Yes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleAnswer(0),\n        style: styles.button,\n        children: \"No\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_s(RomanceQuestions, \"BomFtazYtoPWKmNi6ekDpqzJtpA=\", false, function () {\n  return [useNavigate];\n});\n_c = RomanceQuestions;\nconst styles = {\n  container: {\n    textAlign: 'center',\n    marginTop: '2rem',\n    padding: '1rem'\n  },\n  buttonContainer: {\n    marginTop: '1.5rem',\n    display: 'flex',\n    justifyContent: 'center',\n    gap: '1rem'\n  },\n  button: {\n    padding: '0.75rem 1.5rem',\n    fontSize: '1.1rem',\n    cursor: 'pointer'\n  }\n};\nexport default RomanceQuestions;\nvar _c;\n$RefreshReg$(_c, \"RomanceQuestions\");","map":{"version":3,"names":["React","useContext","useNavigate","AnswerContext","jsxDEV","_jsxDEV","RomanceQuestions","_s","answers","setAnswers","navigate","handleAnswer","value","updatedAnswers","Q4","prev","response","fetch","method","headers","body","JSON","stringify","filters","data","json","movie","state","alert","message","err","console","error","style","styles","container","children","fileName","_jsxFileName","lineNumber","columnNumber","buttonContainer","onClick","button","_c","textAlign","marginTop","padding","display","justifyContent","gap","fontSize","cursor","$RefreshReg$"],"sources":["C:/Users/David/Downloads/movie-recommendation-system-main/movie-recommendation-system-main/frontend/src/pages/LightheartedFlow/RomanceQuestions.js"],"sourcesContent":["import React, { useContext } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { AnswerContext } from '../../AnswerContext';\r\n\r\nconst RomanceQuestions = () => {\r\n    const { answers, setAnswers } = useContext(AnswerContext);\r\n    const navigate = useNavigate();\r\n\r\n    const handleAnswer = async (value) => {\r\n        const updatedAnswers = { ...answers, Q4: value };\r\n        setAnswers(prev => ({ ...prev, Q4: value }));\r\n\r\n        if (value === 1) {\r\n            // User wants romance → go to next romance-specific question (e.g., Q10)\r\n            navigate('/comedy'); // Or a new page if you'd like\r\n        } else {\r\n            // Q4 = 0, skip ahead to recommend Comedy\r\n            try {\r\n                const response = await fetch('http://localhost:5000/api/recommend', {\r\n                    method: 'POST',\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    body: JSON.stringify({ answers: updatedAnswers, filters: {} })\r\n                });\r\n\r\n                const data = await response.json();\r\n\r\n                if (data.movie) {\r\n                    navigate('/recommend/comedy', { state: { movie: data.movie } });\r\n                } else {\r\n                    alert(data.message || 'No recommendation available.');\r\n                }\r\n            } catch (err) {\r\n                console.error(err);\r\n                alert('Error fetching recommendation.');\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div style={styles.container}>\r\n            <h2>Are you interested in a movie that focuses on the development of a romantic relationship between two characters?</h2>\r\n            <div style={styles.buttonContainer}>\r\n                <button onClick={() => handleAnswer(1)} style={styles.button}>Yes</button>\r\n                <button onClick={() => handleAnswer(0)} style={styles.button}>No</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst styles = {\r\n    container: {\r\n        textAlign: 'center',\r\n        marginTop: '2rem',\r\n        padding: '1rem'\r\n    },\r\n    buttonContainer: {\r\n        marginTop: '1.5rem',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        gap: '1rem'\r\n    },\r\n    button: {\r\n        padding: '0.75rem 1.5rem',\r\n        fontSize: '1.1rem',\r\n        cursor: 'pointer'\r\n    }\r\n};\r\n\r\nexport default RomanceQuestions;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
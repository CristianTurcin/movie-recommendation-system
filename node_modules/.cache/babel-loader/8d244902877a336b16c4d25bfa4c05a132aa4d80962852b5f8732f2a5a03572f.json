{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\David\\\\Downloads\\\\movie-recommendation-system-main\\\\movie-recommendation-system-main\\\\frontend\\\\src\\\\pages\\\\MoodSelectionPage.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport '../styles/MoodSelectionPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MoodSelectionPage() {\n  _s();\n  const navigate = useNavigate();\n  const handleMoodSelect = mood => {\n    if (mood === 'comedy') {\n      navigate('/musical');\n    }\n  };\n  const backgroundStyle = {\n    height: '100vh',\n    backgroundImage: `url(${process.env.PUBLIC_URL + '/images/drama.jpg'})`,\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n    color: 'white',\n    textAlign: 'center',\n    paddingTop: '5rem'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: backgroundStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"What kind of movie are you in the mood for?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleMoodSelect('comedy'),\n        children: \"Lighthearted and Comedic\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => alert(\"Not implemented yet\"),\n        children: \"Serious and Dramatic\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n_s(MoodSelectionPage, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = MoodSelectionPage;\nexport default MoodSelectionPage;\nvar _c;\n$RefreshReg$(_c, \"MoodSelectionPage\");","map":{"version":3,"names":["React","useNavigate","jsxDEV","_jsxDEV","MoodSelectionPage","_s","navigate","handleMoodSelect","mood","backgroundStyle","height","backgroundImage","process","env","PUBLIC_URL","backgroundSize","backgroundPosition","color","textAlign","paddingTop","style","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","alert","_c","$RefreshReg$"],"sources":["C:/Users/David/Downloads/movie-recommendation-system-main/movie-recommendation-system-main/frontend/src/pages/MoodSelectionPage.js"],"sourcesContent":["import React from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport '../styles/MoodSelectionPage.css';\r\n\r\nfunction MoodSelectionPage() {\r\n    const navigate = useNavigate();\r\n\r\n    const handleMoodSelect = (mood) => {\r\n        if (mood === 'comedy') {\r\n            navigate('/musical');\r\n        }\r\n    };\r\n\r\n\r\n    const backgroundStyle = {\r\n        height: '100vh',\r\n        backgroundImage: `url(${process.env.PUBLIC_URL + '/images/drama.jpg'})`,\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center',\r\n        color: 'white',\r\n        textAlign: 'center',\r\n        paddingTop: '5rem',\r\n    };\r\n\r\n    return (\r\n        <div style={backgroundStyle}>\r\n            <h1>What kind of movie are you in the mood for?</h1>\r\n            <div className=\"button-container\">\r\n                <button onClick={() => handleMoodSelect('comedy')}>Lighthearted and Comedic</button>\r\n                <button onClick={() => alert(\"Not implemented yet\")}>Serious and Dramatic</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MoodSelectionPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,iCAAiC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,SAASC,iBAAiBA,CAAA,EAAG;EAAAC,EAAA;EACzB,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAE9B,MAAMM,gBAAgB,GAAIC,IAAI,IAAK;IAC/B,IAAIA,IAAI,KAAK,QAAQ,EAAE;MACnBF,QAAQ,CAAC,UAAU,CAAC;IACxB;EACJ,CAAC;EAGD,MAAMG,eAAe,GAAG;IACpBC,MAAM,EAAE,OAAO;IACfC,eAAe,EAAE,OAAOC,OAAO,CAACC,GAAG,CAACC,UAAU,GAAG,mBAAmB,GAAG;IACvEC,cAAc,EAAE,OAAO;IACvBC,kBAAkB,EAAE,QAAQ;IAC5BC,KAAK,EAAE,OAAO;IACdC,SAAS,EAAE,QAAQ;IACnBC,UAAU,EAAE;EAChB,CAAC;EAED,oBACIhB,OAAA;IAAKiB,KAAK,EAAEX,eAAgB;IAAAY,QAAA,gBACxBlB,OAAA;MAAAkB,QAAA,EAAI;IAA2C;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpDtB,OAAA;MAAKuB,SAAS,EAAC,kBAAkB;MAAAL,QAAA,gBAC7BlB,OAAA;QAAQwB,OAAO,EAAEA,CAAA,KAAMpB,gBAAgB,CAAC,QAAQ,CAAE;QAAAc,QAAA,EAAC;MAAwB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACpFtB,OAAA;QAAQwB,OAAO,EAAEA,CAAA,KAAMC,KAAK,CAAC,qBAAqB,CAAE;QAAAP,QAAA,EAAC;MAAoB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACpB,EAAA,CA7BQD,iBAAiB;EAAA,QACLH,WAAW;AAAA;AAAA4B,EAAA,GADvBzB,iBAAiB;AA+B1B,eAAeA,iBAAiB;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\David\\\\Downloads\\\\movie-recommendation-system-main\\\\movie-recommendation-system-main\\\\frontend\\\\src\\\\pages\\\\LightheartedFlow\\\\ComedyQuestions.js\",\n  _s = $RefreshSig$();\nimport React, { useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { AnswerContext } from '../../AnswerContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ComedyQuestions = () => {\n  _s();\n  const {\n    answers,\n    setAnswers\n  } = useContext(AnswerContext);\n  const navigate = useNavigate();\n  const handleAnswer = async value => {\n    const updatedAnswers = {\n      ...answers,\n      Q10: value\n    };\n    setAnswers(updatedAnswers);\n\n    // After final question, go to recommendation endpoint\n    try {\n      const response = await fetch('http://localhost:5000/api/recommend', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          answers: updatedAnswers,\n          filters: {}\n        }) // add filters if needed\n      });\n      const data = await response.json();\n      if (data.movie) {\n        navigate('/recommend/comedy', {\n          state: {\n            movie: data.movie\n          }\n        });\n      } else {\n        alert(data.message || 'No recommendation available.');\n      }\n    } catch (err) {\n      console.error(err);\n      alert('Error fetching recommendation.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Does the movie explore the character's past (e.g., through flashbacks)?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.buttonContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleAnswer(1),\n        style: styles.button,\n        children: \"Yes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleAnswer(0),\n        style: styles.button,\n        children: \"No\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n_s(ComedyQuestions, \"BomFtazYtoPWKmNi6ekDpqzJtpA=\", false, function () {\n  return [useNavigate];\n});\n_c = ComedyQuestions;\nconst styles = {\n  container: {\n    textAlign: 'center',\n    marginTop: '2rem',\n    padding: '1rem'\n  },\n  buttonContainer: {\n    marginTop: '1.5rem',\n    display: 'flex',\n    justifyContent: 'center',\n    gap: '1rem'\n  },\n  button: {\n    padding: '0.75rem 1.5rem',\n    fontSize: '1.1rem',\n    cursor: 'pointer'\n  }\n};\nexport default ComedyQuestions;\nvar _c;\n$RefreshReg$(_c, \"ComedyQuestions\");","map":{"version":3,"names":["React","useContext","useNavigate","AnswerContext","jsxDEV","_jsxDEV","ComedyQuestions","_s","answers","setAnswers","navigate","handleAnswer","value","updatedAnswers","Q10","response","fetch","method","headers","body","JSON","stringify","filters","data","json","movie","state","alert","message","err","console","error","style","styles","container","children","fileName","_jsxFileName","lineNumber","columnNumber","buttonContainer","onClick","button","_c","textAlign","marginTop","padding","display","justifyContent","gap","fontSize","cursor","$RefreshReg$"],"sources":["C:/Users/David/Downloads/movie-recommendation-system-main/movie-recommendation-system-main/frontend/src/pages/LightheartedFlow/ComedyQuestions.js"],"sourcesContent":["import React, { useContext } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { AnswerContext } from '../../AnswerContext';\r\n\r\nconst ComedyQuestions = () => {\r\n    const { answers, setAnswers } = useContext(AnswerContext);\r\n    const navigate = useNavigate();\r\n\r\n    const handleAnswer = async (value) => {\r\n        const updatedAnswers = { ...answers, Q10: value };\r\n        setAnswers(updatedAnswers);\r\n\r\n        // After final question, go to recommendation endpoint\r\n        try {\r\n            const response = await fetch('http://localhost:5000/api/recommend', {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ answers: updatedAnswers, filters: {} }) // add filters if needed\r\n            });\r\n\r\n            const data = await response.json();\r\n\r\n            if (data.movie) {\r\n                navigate('/recommend/comedy', { state: { movie: data.movie } });\r\n            } else {\r\n                alert(data.message || 'No recommendation available.');\r\n            }\r\n        } catch (err) {\r\n            console.error(err);\r\n            alert('Error fetching recommendation.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div style={styles.container}>\r\n            <h2>Does the movie explore the character's past (e.g., through flashbacks)?</h2>\r\n            <div style={styles.buttonContainer}>\r\n                <button onClick={() => handleAnswer(1)} style={styles.button}>Yes</button>\r\n                <button onClick={() => handleAnswer(0)} style={styles.button}>No</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst styles = {\r\n    container: {\r\n        textAlign: 'center',\r\n        marginTop: '2rem',\r\n        padding: '1rem'\r\n    },\r\n    buttonContainer: {\r\n        marginTop: '1.5rem',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        gap: '1rem'\r\n    },\r\n    button: {\r\n        padding: '0.75rem 1.5rem',\r\n        fontSize: '1.1rem',\r\n        cursor: 'pointer'\r\n    }\r\n};\r\n\r\nexport default ComedyQuestions;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}